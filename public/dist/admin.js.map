{"version":3,"sources":["webpack://xdcDatachainGateway_[name]/webpack/bootstrap","webpack://xdcDatachainGateway_[name]/external \"React\"","webpack://xdcDatachainGateway_[name]/external \"tatum_utils\"","webpack://xdcDatachainGateway_[name]/./src/public/ts/wp-api/index.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/wp-api/hello.get.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/utils/index.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/admin.tsx","webpack://xdcDatachainGateway_[name]/external \"ReactDOM\"","webpack://xdcDatachainGateway_[name]/external \"mobx\"","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/stores.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/index.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/components/todoItem.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/components/todo.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/components/page.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/option.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/models/todoModel.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/todo.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","tatum_utils","locationRestHelloGet","path","method","RouteHttpVerb","GET","UtilsFactory","requestMemo","localizationMemo","this","createRequestFactory","RootStore","optionStore","createLocalizationFactory","pureSlug","me","urlBuilder","request","__","localization","_i","node","document","getElementById","slug","render","StoreProvider","ReactDOM","mobx","configure","enforceActions","contextMemo","createContextFactory","constructor","todoStore","TodoStore","OptionStore","context","useStores","TodoItem","observer","todo","isBold","setBold","useState","onMouseEnter","onMouseLeave","className","classNames","type","title","href","onClick","destroy","TodoOverview","inputText","setInputText","todos","onChange","event","target","placeholder","ButtonType","Primary","disabled","add","map","id","async","doHelloWorldRestCall","persist","location","usedUrl","alert","JSON","stringify","undefined","preventDefault","ComponentLibrary","NoticeType","Info","textDomain","restUrl","a","Success","Error","BaseOptions","rootStore","super","pureSlugCamelCased","getPureSlug","process","runInAction","assign","observable","TodoModel","store","toggle","completed","indexOf","setTitle","action"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wp-content/plugins/xdc-datachain-gateway/public/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonpxdcDatachainGateway_name_\"] = window[\"webpackJsonpxdcDatachainGateway_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([260,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = React;","module.exports = tatum_utils;","export * from \"./hello.get\";\n","import {\n    RouteLocationInterface,\n    RouteHttpVerb,\n    RouteResponseInterface,\n    RouteRequestInterface,\n    RouteParamsInterface\n} from \"@tatum/utils\";\n\nexport const locationRestHelloGet: RouteLocationInterface = {\n    path: \"/hello\",\n    method: RouteHttpVerb.GET\n};\n\nexport type RequestRouteHelloGet = RouteRequestInterface;\n\nexport type ParamsRouteHelloGet = RouteParamsInterface;\n\nexport interface ResponseRouteHelloGet extends RouteResponseInterface {\n    hello: string;\n}\n","/* istanbul ignore file: this file does not contain any logic, only factory calls */\n\nimport { createRequestFactory, createLocalizationFactory } from \"@tatum/utils\";\nimport { RootStore } from \"../store\";\n\nclass UtilsFactory {\n    private static me: UtilsFactory;\n\n    private requestMemo: ReturnType<typeof createRequestFactory>;\n\n    private localizationMemo: ReturnType<typeof createLocalizationFactory>;\n\n    // Create REST API relevant stuff from factory\n    public get request() {\n        return this.requestMemo\n            ? this.requestMemo\n            : (this.requestMemo = createRequestFactory(RootStore.get.optionStore));\n    }\n\n    // Create i18n relevant stuff from factory\n    public get localization() {\n        return this.localizationMemo\n            ? this.localizationMemo\n            : (this.localizationMemo = createLocalizationFactory(RootStore.get.optionStore.pureSlug));\n    }\n\n    public static get get() {\n        return UtilsFactory.me ? UtilsFactory.me : (UtilsFactory.me = new UtilsFactory());\n    }\n}\n\nconst urlBuilder: UtilsFactory[\"requestMemo\"][\"urlBuilder\"] = (...args) => UtilsFactory.get.request.urlBuilder(...args);\nconst request: UtilsFactory[\"requestMemo\"][\"request\"] = (...args) => UtilsFactory.get.request.request(...args);\nconst _n: UtilsFactory[\"localizationMemo\"][\"_n\"] = (...args) => UtilsFactory.get.localization._n(...args);\nconst _nx: UtilsFactory[\"localizationMemo\"][\"_nx\"] = (...args) => UtilsFactory.get.localization._nx(...args);\nconst _x: UtilsFactory[\"localizationMemo\"][\"_x\"] = (...args) => UtilsFactory.get.localization._x(...args);\nconst __: UtilsFactory[\"localizationMemo\"][\"__\"] = (...args) => UtilsFactory.get.localization.__(...args);\nconst _i: UtilsFactory[\"localizationMemo\"][\"_i\"] = (...args) => UtilsFactory.get.localization._i(...args);\n\nexport { urlBuilder, request, _n, _nx, _x, __, _i };\n","/* istanbul ignore file: we do not need to care about the entry point file as errors are detected through integration tests (E2E) */\n\n/**\n * The entry point for the admin side wp-admin resource.\n */\nimport \"@tatum/utils\"; // Import once for startup polyfilling (e. g. setimmediate)\nimport { render } from \"react-dom\";\nimport { ComponentLibrary } from \"./components\";\nimport { RootStore } from \"./store\";\nimport \"./style/admin.scss\";\n\nconst node = document.getElementById(`${RootStore.get.optionStore.slug}-component`);\n\nif (node) {\n    render(\n        <RootStore.StoreProvider>\n            <ComponentLibrary />\n        </RootStore.StoreProvider>,\n        node\n    );\n}\n\n// Expose this functionalities to add-ons, but you need to activate the library functionality\n// in your webpack configuration, see also https://webpack.js.org/guides/author-libraries/\nexport * from \"@tatum/utils\";\nexport * from \"./wp-api\";\nexport * from \"./store\";\n","module.exports = ReactDOM;","module.exports = mobx;","import { configure } from \"mobx\";\nimport { createContextFactory } from \"@tatum/utils\";\nimport { TodoStore } from \"./todo\";\nimport { OptionStore } from \"./option\";\n\nconfigure({\n    enforceActions: \"always\"\n});\n\n/**\n * A collection of all available stores which gets available\n * through the custom hook useStores in your function components.\n *\n * @see https://mobx.js.org/best/store.html#combining-multiple-stores\n */\nclass RootStore {\n    private static me: RootStore;\n\n    public todoStore: TodoStore;\n\n    public optionStore: OptionStore;\n\n    private contextMemo: {\n        StoreContext: React.Context<RootStore>;\n        StoreProvider: React.FC<{}>;\n        useStores: () => RootStore;\n    };\n\n    public get context() {\n        return this.contextMemo\n            ? this.contextMemo\n            : (this.contextMemo = createContextFactory((this as unknown) as RootStore));\n    }\n\n    private constructor() {\n        this.todoStore = new TodoStore(this);\n        this.optionStore = new OptionStore(this);\n    }\n\n    public static get StoreProvider() {\n        return RootStore.get.context.StoreProvider;\n    }\n\n    public static get get() {\n        return RootStore.me ? RootStore.me : (RootStore.me = new RootStore());\n    }\n}\n\nconst useStores = () => RootStore.get.context.useStores();\n\nexport { RootStore, useStores };\n","export * from \"./todo\";\nexport * from \"./stores\";\nexport * from \"./option\";\n","import classNames from \"classnames\";\nimport { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { TodoModel } from \"../models\";\nimport { __ } from \"../utils\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * Removable todo item.\n */\nconst TodoItem = observer(({ todo }: { todo: TodoModel }) => {\n    const [isBold, setBold] = useState(false);\n    return (\n        <li onMouseEnter={() => setBold(true)} onMouseLeave={() => setBold(false)}>\n            <label className={classNames(isBold && \"attention\")}>\n                <input type=\"checkbox\" />\n                {todo.title}\n            </label>\n            &nbsp;\n            <a href=\"#\" onClick={() => todo.destroy()}>\n                {__(\"Remove\")}\n            </a>\n        </li>\n    );\n});\n\nexport { TodoItem };\n","import { FC, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button, ButtonType } from \"@tatum/utils\";\nimport { TodoItem } from \"./todoItem\";\nimport { useStores } from \"../store\";\nimport { __ } from \"../utils\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * The mobx-react package also provides the Provider component that can be used to pass down stores using\n * React's context mechanism. For this you have to use the custom useStores hook implemented in ../stores\n * in your function components.\n *\n * @see https://mobx-react.js.org/recipes-context\n * @see https://mobx.js.org/refguide/observer-component.html#connect-components-to-provided-stores-using-inject\n */\nconst TodoOverview: FC<{}> = observer(() => {\n    const [inputText, setInputText] = useState(\"\");\n    const { todoStore } = useStores();\n\n    return (\n        <div className=\"wp-styleguide--buttons\">\n            <h2>\n                {__(\"Todo list\")} ({todoStore.todos.length})\n            </h2>\n            <p>{__(\"This section demonstrates a MobX Todo list (no peristence to server).\")}</p>\n            <input\n                value={inputText}\n                onChange={(event) => setInputText(event.target.value)}\n                type=\"text\"\n                className=\"regular-text\"\n                placeholder={__(\"What needs to be done?\")}\n            />\n            <Button type={ButtonType.Primary} disabled={!inputText.length} onClick={() => todoStore.add(inputText)}>\n                {__(\"Add\")}\n            </Button>\n            <ul>\n                {todoStore.todos.map((t) => (\n                    <TodoItem key={t.id} todo={t} />\n                ))}\n                {!todoStore.todos.length && <li>No entries</li>}\n            </ul>\n        </div>\n    );\n});\n\nexport { TodoOverview };\n","import React, { FC } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Notice, NoticeType } from \"@tatum/utils\";\nimport { TodoOverview } from \"./todo\";\nimport { RequestRouteHelloGet, ParamsRouteHelloGet, ResponseRouteHelloGet, locationRestHelloGet } from \"../wp-api\";\nimport { useStores } from \"../store\";\nimport { request, urlBuilder, __, _i } from \"../utils\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\n/**\n * Do a test ajax call when clicking the REST API url.\n *\n * @param e\n */\nasync function doHelloWorldRestCall(event: React.MouseEvent) {\n    event.persist();\n    const result = await request<RequestRouteHelloGet, ParamsRouteHelloGet, ResponseRouteHelloGet>({\n        location: locationRestHelloGet\n    });\n    const usedUrl = urlBuilder({ location: locationRestHelloGet });\n    alert(`${usedUrl}\\n\\n${JSON.stringify(result, undefined, 4)}`);\n    event.preventDefault();\n}\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nconst ComponentLibrary: FC<{}> = observer(() => {\n    const { optionStore } = useStores();\n    return (\n        <div className=\"wp-styleguide\">\n            <h1>WP React Component Library</h1>\n\n            <Notice type={NoticeType.Info}>\n                {__(\"The text domain of the plugin is: %(textDomain)s (localized variable)\", {\n                    textDomain: optionStore.textDomain\n                })}\n            </Notice>\n            <Notice type={NoticeType.Info}>\n                {_i(\n                    __(\n                        \"The WP REST API URL of the plugin is: {{a}}%(restUrl)s{{/a}} (localized variable, click for hello world example)\",\n                        {\n                            restUrl: optionStore.restUrl\n                        }\n                    ),\n                    {\n                        a: (\n                            <a href=\"#\" onClick={doHelloWorldRestCall}>\n                                {optionStore.restUrl}\n                            </a>\n                        )\n                    }\n                )}\n            </Notice>\n            <Notice type={NoticeType.Info}>{__(\"The is an informative notice\")}</Notice>\n            <Notice type={NoticeType.Success}>{__(\"Your action was successful\")}</Notice>\n            <Notice type={NoticeType.Error}>{__(\"An unexpected error has occurred\")}</Notice>\n            <TodoOverview />\n        </div>\n    );\n});\n\nexport { ComponentLibrary };\n","import { observable, runInAction } from \"mobx\";\nimport { BaseOptions } from \"@tatum/utils\";\nimport { RootStore } from \"./stores\";\n\nclass OptionStore extends BaseOptions {\n    // Implement \"others\" property in your Assets.php;\n    @observable\n    public others: {} = {};\n\n    public readonly pureSlug: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly pureSlugCamelCased: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        super();\n        this.rootStore = rootStore;\n        this.pureSlug = BaseOptions.getPureSlug(process.env);\n        this.pureSlugCamelCased = BaseOptions.getPureSlug(process.env, true);\n\n        // Use the localized WP object to fill this object values.\n        runInAction(() => Object.assign(this, (window as any)[this.pureSlugCamelCased]));\n    }\n}\n\nexport { OptionStore };\n","import { observable, action } from \"mobx\";\nimport { TodoStore } from \"../store\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoModel {\n    @observable\n    public title: string;\n\n    @observable\n    public completed = false;\n\n    @observable\n    public id: number;\n\n    private store: TodoStore;\n\n    constructor(store: TodoModel[\"store\"], title: TodoModel[\"title\"]) {\n        this.id = store.todos.length + 1;\n        this.store = store;\n        this.title = title;\n    }\n\n    @action\n    public toggle() {\n        this.completed = !this.completed;\n    }\n\n    @action\n    public destroy() {\n        this.store.todos.splice(this.store.todos.indexOf(this), 1);\n    }\n\n    @action\n    public setTitle(title: TodoModel[\"title\"]) {\n        this.title = title;\n    }\n}\n\nexport { TodoModel };\n","import { observable, action } from \"mobx\";\nimport { TodoModel } from \"../models\";\nimport { RootStore } from \"./stores\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoStore {\n    @observable\n    public todos: TodoModel[] = [];\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @action\n    public add(title: TodoModel[\"title\"]) {\n        this.todos.push(new TodoModel(this, title));\n    }\n}\n\nexport { TodoStore };\n"],"sourceRoot":""}