{"version":3,"sources":["webpack://xdcDatachainGateway_[name]/webpack/bootstrap","webpack://xdcDatachainGateway_[name]/external \"React\"","webpack://xdcDatachainGateway_[name]/external \"tatum_utils\"","webpack://xdcDatachainGateway_[name]/./src/public/ts/utils/index.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/constants.tsx","webpack://xdcDatachainGateway_[name]/external \"ReactDOM\"","webpack://xdcDatachainGateway_[name]/external \"mobx\"","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/stores.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/components/Spinner/index.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/hooks/useXdcPay.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/utils/utils.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/utils/message.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/hooks/useGet.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/widget/xdcPaymentGateway.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/widget.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/option.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/models/todoModel.tsx","webpack://xdcDatachainGateway_[name]/./src/public/ts/store/todo.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","tatum_utils","UtilsFactory","requestMemo","localizationMemo","this","createRequestFactory","RootStore","optionStore","createLocalizationFactory","pureSlug","me","urlBuilder","request","__","localization","_i","Constants","slug","rest","prefix","contractAddress","xdc","explorer","provider","erc20","datachain","address","decimals","image","symbol","tokenABI","inputs","stateMutability","type","anonymous","indexed","internalType","outputs","ReactDOM","mobx","configure","enforceActions","contextMemo","createContextFactory","constructor","todoStore","TodoStore","OptionStore","context","StoreProvider","useStores","Spinner","className","useDatachainXdcPay","txId","setTxId","useState","isXdcPayAvailable","setIsXdcPayAvailable","useEffect","initXdcPay","getAddress","async","enable","initWeb3","web3","Web3","contract","eth","Contract","getAmountWithoutDecimals","amount","rate","BigNumber","div","toFixed","setInterval","accounts","checkXdcAvailable","pay","receiveAddress","amountWithoutDecimals","balance","methods","balanceOf","utils","fromWei","getTokenBalance","gte","account","abi","transfer","replace","toBN","encodeABI","sendAsync","method","params","from","to","err","console","log","sendTransaction","Number","status","message","addDcErc20Token","options","network","getExplorerUrl","chain","Error","showError","content","error","useGet","path","setData","fetchMyAPI","location","RouteHttpVerb","GET","e","lazy","refetch","XdcPaymentGateway","cartTotal","Loading","cardTotal","restRoot","origin","restNamespace","undefined","GatewayContent","PaymentGateway","InstallXdcPay","setError","target","rel","href","Button","src","onClick","payXdc","children","setTimeout","document","querySelectorAll","forEach","gateway","render","dataset","BaseOptions","rootStore","super","pureSlugCamelCased","getPureSlug","process","runInAction","assign","observable","TodoModel","store","title","id","todos","toggle","completed","destroy","indexOf","setTitle","action","add"],"mappings":"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","file":"widget.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0,\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wp-content/plugins/xdc-datachain-gateway/public/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonpxdcDatachainGateway_name_\"] = window[\"webpackJsonpxdcDatachainGateway_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([573,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = React;","module.exports = tatum_utils;","/* istanbul ignore file: this file does not contain any logic, only factory calls */\n\nimport { createRequestFactory, createLocalizationFactory } from \"@tatum/utils\";\nimport { RootStore } from \"../store\";\n\nclass UtilsFactory {\n    private static me: UtilsFactory;\n\n    private requestMemo: ReturnType<typeof createRequestFactory>;\n\n    private localizationMemo: ReturnType<typeof createLocalizationFactory>;\n\n    // Create REST API relevant stuff from factory\n    public get request() {\n        return this.requestMemo\n            ? this.requestMemo\n            : (this.requestMemo = createRequestFactory(RootStore.get.optionStore));\n    }\n\n    // Create i18n relevant stuff from factory\n    public get localization() {\n        return this.localizationMemo\n            ? this.localizationMemo\n            : (this.localizationMemo = createLocalizationFactory(RootStore.get.optionStore.pureSlug));\n    }\n\n    public static get get() {\n        return UtilsFactory.me ? UtilsFactory.me : (UtilsFactory.me = new UtilsFactory());\n    }\n}\n\nconst urlBuilder: UtilsFactory[\"requestMemo\"][\"urlBuilder\"] = (...args) => UtilsFactory.get.request.urlBuilder(...args);\nconst request: UtilsFactory[\"requestMemo\"][\"request\"] = (...args) => UtilsFactory.get.request.request(...args);\nconst _n: UtilsFactory[\"localizationMemo\"][\"_n\"] = (...args) => UtilsFactory.get.localization._n(...args);\nconst _nx: UtilsFactory[\"localizationMemo\"][\"_nx\"] = (...args) => UtilsFactory.get.localization._nx(...args);\nconst _x: UtilsFactory[\"localizationMemo\"][\"_x\"] = (...args) => UtilsFactory.get.localization._x(...args);\nconst __: UtilsFactory[\"localizationMemo\"][\"__\"] = (...args) => UtilsFactory.get.localization.__(...args);\nconst _i: UtilsFactory[\"localizationMemo\"][\"_i\"] = (...args) => UtilsFactory.get.localization._i(...args);\n\nexport { urlBuilder, request, _n, _nx, _x, __, _i };\n","//TODO: fetch recipient\nexport const Constants = {\n    slug: \"xdc-datachain-gateway\",\n    rest: {\n        prefix: `wp-json/xdc-datachain-gateway/v1`\n    },\n    contractAddress: {\n        xdc: {\n            explorer: \"https://explorer.xinfin.network\",\n            provider: \"https://rpc.xinfin.network\",\n            erc20: {\n                datachain: {\n                    address: \"0x20b59e6c5deb7d7ced2ca823c6ca81dd3f7e9a3a\",\n                    decimals: \"18\",\n                    image: \"https://pbs.twimg.com/profile_images/1043846876636860416/VVJngBAZ_400x400.jpg\",\n                    symbol: \"DC\",\n                    tokenABI: [\n                        {\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            // @ts-ignore\n                            inputs: [],\n                            stateMutability: \"nonpayable\",\n                            type: \"constructor\"\n                        },\n                        {\n                            anonymous: false,\n                            inputs: [\n                                {\n                                    indexed: true,\n                                    internalType: \"address\",\n                                    name: \"owner\",\n                                    type: \"address\"\n                                },\n                                {\n                                    indexed: true,\n                                    internalType: \"address\",\n                                    name: \"spender\",\n                                    type: \"address\"\n                                },\n                                {\n                                    indexed: false,\n                                    internalType: \"uint256\",\n                                    name: \"value\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"Approval\",\n                            type: \"event\"\n                        },\n                        {\n                            anonymous: false,\n                            inputs: [\n                                {\n                                    indexed: true,\n                                    internalType: \"address\",\n                                    name: \"from\",\n                                    type: \"address\"\n                                },\n                                {\n                                    indexed: true,\n                                    internalType: \"address\",\n                                    name: \"to\",\n                                    type: \"address\"\n                                },\n                                {\n                                    indexed: false,\n                                    internalType: \"uint256\",\n                                    name: \"value\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"Transfer\",\n                            type: \"event\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"owner\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"address\",\n                                    name: \"spender\",\n                                    type: \"address\"\n                                }\n                            ],\n                            name: \"allowance\",\n                            outputs: [\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"spender\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"amount\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"approve\",\n                            outputs: [\n                                {\n                                    internalType: \"bool\",\n                                    name: \"\",\n                                    type: \"bool\"\n                                }\n                            ],\n                            stateMutability: \"nonpayable\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"account\",\n                                    type: \"address\"\n                                }\n                            ],\n                            name: \"balanceOf\",\n                            outputs: [\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [],\n                            name: \"decimals\",\n                            outputs: [\n                                {\n                                    internalType: \"uint8\",\n                                    name: \"\",\n                                    type: \"uint8\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"spender\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"subtractedValue\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"decreaseAllowance\",\n                            outputs: [\n                                {\n                                    internalType: \"bool\",\n                                    name: \"\",\n                                    type: \"bool\"\n                                }\n                            ],\n                            stateMutability: \"nonpayable\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"spender\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"addedValue\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"increaseAllowance\",\n                            outputs: [\n                                {\n                                    internalType: \"bool\",\n                                    name: \"\",\n                                    type: \"bool\"\n                                }\n                            ],\n                            stateMutability: \"nonpayable\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [],\n                            name: \"name\",\n                            outputs: [\n                                {\n                                    internalType: \"string\",\n                                    name: \"\",\n                                    type: \"string\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [],\n                            name: \"symbol\",\n                            outputs: [\n                                {\n                                    internalType: \"string\",\n                                    name: \"\",\n                                    type: \"string\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [],\n                            name: \"totalSupply\",\n                            outputs: [\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            stateMutability: \"view\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"to\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"amount\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"transfer\",\n                            outputs: [\n                                {\n                                    internalType: \"bool\",\n                                    name: \"\",\n                                    type: \"bool\"\n                                }\n                            ],\n                            stateMutability: \"nonpayable\",\n                            type: \"function\"\n                        },\n                        {\n                            inputs: [\n                                {\n                                    internalType: \"address\",\n                                    name: \"from\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"address\",\n                                    name: \"to\",\n                                    type: \"address\"\n                                },\n                                {\n                                    internalType: \"uint256\",\n                                    name: \"amount\",\n                                    type: \"uint256\"\n                                }\n                            ],\n                            name: \"transferFrom\",\n                            outputs: [\n                                {\n                                    internalType: \"bool\",\n                                    name: \"\",\n                                    type: \"bool\"\n                                }\n                            ],\n                            stateMutability: \"nonpayable\",\n                            type: \"function\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n};\n","module.exports = ReactDOM;","module.exports = mobx;","import { configure } from \"mobx\";\nimport { createContextFactory } from \"@tatum/utils\";\nimport { TodoStore } from \"./todo\";\nimport { OptionStore } from \"./option\";\n\nconfigure({\n    enforceActions: \"always\"\n});\n\n/**\n * A collection of all available stores which gets available\n * through the custom hook useStores in your function components.\n *\n * @see https://mobx.js.org/best/store.html#combining-multiple-stores\n */\nclass RootStore {\n    private static me: RootStore;\n\n    public todoStore: TodoStore;\n\n    public optionStore: OptionStore;\n\n    private contextMemo: {\n        StoreContext: React.Context<RootStore>;\n        StoreProvider: React.FC<{}>;\n        useStores: () => RootStore;\n    };\n\n    public get context() {\n        return this.contextMemo\n            ? this.contextMemo\n            : (this.contextMemo = createContextFactory((this as unknown) as RootStore));\n    }\n\n    private constructor() {\n        this.todoStore = new TodoStore(this);\n        this.optionStore = new OptionStore(this);\n    }\n\n    public static get StoreProvider() {\n        return RootStore.get.context.StoreProvider;\n    }\n\n    public static get get() {\n        return RootStore.me ? RootStore.me : (RootStore.me = new RootStore());\n    }\n}\n\nconst useStores = () => RootStore.get.context.useStores();\n\nexport { RootStore, useStores };\n","import { Spin } from \"antd\";\nimport React from \"react\";\nimport \"./index.scss\";\n\nexport const Spinner = () => {\n    return (\n        <div className=\"spinner-container\">\n            <Spin />\n        </div>\n    );\n};\n","import { Constants } from \"../constants\";\nimport Web3 from \"web3\";\nimport { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport const useDatachainXdcPay = () => {\n    const [txId, setTxId] = useState();\n    const [isXdcPayAvailable, setIsXdcPayAvailable] = useState<undefined | boolean>();\n\n    useEffect(() => {\n        initXdcPay();\n    });\n\n    const getAddress = async () => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const accounts = await window.xdc.enable();\n        return accounts[0];\n    };\n\n    const addDcErc20Token = async () => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        await window.xdc.sendAsync(\n            {\n                method: \"metamask_watchAsset\",\n                params: {\n                    type: \"ERC20\",\n                    options: {\n                        address: Constants.contractAddress.xdc.erc20.datachain.address,\n                        decimals: Constants.contractAddress.xdc.erc20.datachain.decimals,\n                        symbol: Constants.contractAddress.xdc.erc20.datachain.symbol,\n                        image: Constants.contractAddress.xdc.erc20.datachain.image\n                    }\n                }\n            },\n            (err: any, network: any) => {\n                console.log(err);\n                console.log(network);\n            }\n        );\n    };\n\n    const sendTransaction = async (amount: number, receiveAddress: string) => {\n        const account = await getAddress();\n        const { contract } = await initWeb3();\n        const abi = contract.methods\n            .transfer(receiveAddress.replace(\"xdc\", \"0x\"), Web3.utils.toBN(amount * 10 ** 18))\n            .encodeABI();\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        await window.xdc.sendAsync(\n            {\n                method: \"eth_sendTransaction\",\n                params: [\n                    {\n                        from: account,\n                        to: Constants.contractAddress.xdc.erc20.datachain.address,\n                        data: abi\n                    }\n                ]\n            },\n            (err: any, result: any) => {\n                console.log(err);\n                console.log(result);\n                setTxId(result.result);\n            }\n        );\n    };\n\n    const getTokenBalance = async () => {\n        const address = await getAddress();\n        const { web3, contract } = await initWeb3();\n\n        const result = await contract.methods.balanceOf(address).call();\n        return new BigNumber(web3.utils.fromWei(result));\n    };\n\n    const initWeb3 = async () => {\n        const web3 = new Web3(Constants.contractAddress.xdc.provider);\n        const contract = new web3.eth.Contract(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            Constants.contractAddress.xdc.erc20.datachain.tokenABI,\n            Constants.contractAddress.xdc.erc20.datachain.address\n        );\n        return { web3, contract };\n    };\n\n    const pay = async (amount: string, rate: number, receiveAddress: string) => {\n        const amountWithoutDecimals = getAmountWithoutDecimals(amount, rate);\n        const balance = await getTokenBalance();\n        if (balance.gte(amountWithoutDecimals)) {\n            await sendTransaction(Number(amountWithoutDecimals), receiveAddress);\n            return {\n                status: \"success\",\n                message: \"OK\"\n            };\n        } else {\n            return {\n                status: \"error\",\n                message: `You dont have enough XDC tokens on your account. On your account you have ${balance.toFixed(\n                    0,\n                    2\n                )} but you want to pay ${amountWithoutDecimals}.`\n            };\n        }\n    };\n\n    const getAmountWithoutDecimals = (amount: string, rate: number) => {\n        return new BigNumber(amount).div(rate).toFixed(0, 2);\n    };\n\n    const checkXdcAvailable = async () => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (!window?.xdc) {\n            setIsXdcPayAvailable(false);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const accounts = await window.xdc.enable();\n        return setIsXdcPayAvailable(accounts.length > 0);\n    };\n\n    const initXdcPay = async () => {\n        setInterval(async () => {\n            await checkXdcAvailable();\n        }, 1000);\n    };\n\n    return { pay, txId, addDcErc20Token, isXdcPayAvailable, getAmountWithoutDecimals };\n};\n","import { Constants } from \"../constants\";\n\nexport const getExplorerUrl = (chain: string, txId: string) => {\n    switch (chain) {\n        case \"XDC\":\n            return `${Constants.contractAddress.xdc.explorer}/txs/${txId}`;\n    }\n    throw new Error(`Unknown chain`);\n};\nexport const getImageUrl = (name: string) =>\n    `${window.location.origin}/wp-content/plugins/xdc-datachain-gateway/public/assets/${name}`;\n","import { message } from \"antd\";\n\nexport const showError = (content: string) => message.error({ content });\nexport const showSuccess = (content: string) => message.success({ content });\n","import { useEffect, useState } from \"react\";\nimport { RouteHttpVerb, RouteParamsInterface, RouteRequestInterface } from \"@tatum/utils\";\nimport { showError } from \"../utils/message\";\nimport { ResponseError } from \"../models/reponseError\";\nimport { request } from \"../utils\";\n\nexport const useGet = <T extends ResponseError>(path: string, options?: Options) => {\n    const [data, setData] = useState<T | null>(null);\n    const fetchMyAPI = async () => {\n        try {\n            const result = await request<RouteRequestInterface, RouteParamsInterface, T>({\n                location: {\n                    path,\n                    method: RouteHttpVerb.GET\n                },\n                options\n            });\n\n            if (result?.status === \"error\" && result.message) {\n                showError(result.message);\n            }\n\n            setData(result);\n        } catch (e) {\n            showError(\"An error occurred. Please contact support.\");\n        }\n    };\n    useEffect(() => {\n        if (options?.lazy !== true) {\n            fetchMyAPI();\n        }\n    }, []);\n\n    return { data, refetch: fetchMyAPI };\n};\n\nexport interface Options {\n    restRoot: string;\n    restNamespace: string;\n    restNonce?: string;\n    restQuery?: string;\n    lazy?: boolean;\n}\n","import { Checkmark } from \"react-checkmark\";\nimport { Spinner } from \"../components/Spinner\";\nimport { useDatachainXdcPay } from \"../hooks/useXdcPay\";\nimport { getImageUrl, getExplorerUrl } from \"../utils/utils\";\nimport React, { useState } from \"react\";\nimport { ResponseError } from \"../models\";\nimport { useGet } from \"../hooks/useGet\";\nimport { Constants } from \"../constants\";\n\nexport const XdcPaymentGateway = ({ cartTotal }: { cartTotal: string }) => {\n    const { pay, txId, addDcErc20Token, isXdcPayAvailable, getAmountWithoutDecimals } = useDatachainXdcPay();\n    return (\n        <div className=\"flex flex-col justify-center items-center\">\n            <Loading\n                cardTotal={cartTotal}\n                txId={txId}\n                pay={pay}\n                addDcErc20Token={addDcErc20Token}\n                isXdcPayAvailable={isXdcPayAvailable}\n                getAmountWithoutDecimals={getAmountWithoutDecimals}\n            />\n        </div>\n    );\n};\n\nconst Loading = ({\n    isXdcPayAvailable,\n    pay,\n    txId,\n    addDcErc20Token,\n    cardTotal,\n    getAmountWithoutDecimals\n}: Gateway & { isXdcPayAvailable: boolean | undefined }) => {\n    const { data: rate } = useGet<{ rate: number } & ResponseError>(\"/rate\", {\n        restRoot: window.location.origin,\n        restNamespace: Constants.rest.prefix\n    });\n\n    const { data: receiveAddress } = useGet<{ receiveAddress: string } & ResponseError>(\"/receive-address\", {\n        restRoot: window.location.origin,\n        restNamespace: Constants.rest.prefix\n    });\n    return isXdcPayAvailable === undefined || !rate || !receiveAddress ? (\n        <Spinner />\n    ) : (\n        <GatewayContent\n            cardTotal={cardTotal}\n            txId={txId}\n            pay={pay}\n            addDcErc20Token={addDcErc20Token}\n            isXdcPayAvailable={isXdcPayAvailable}\n            rate={rate?.rate}\n            getAmountWithoutDecimals={getAmountWithoutDecimals}\n            receiveAddress={receiveAddress.receiveAddress}\n        />\n    );\n};\n\nconst GatewayContent = ({\n    isXdcPayAvailable,\n    pay,\n    txId,\n    addDcErc20Token,\n    cardTotal,\n    rate,\n    getAmountWithoutDecimals,\n    receiveAddress\n}: Gateway & { isXdcPayAvailable: boolean }) =>\n    isXdcPayAvailable === true ? (\n        <PaymentGateway\n            getAmountWithoutDecimals={getAmountWithoutDecimals}\n            rate={rate}\n            cardTotal={cardTotal}\n            txId={txId}\n            pay={pay}\n            addDcErc20Token={addDcErc20Token}\n            receiveAddress={receiveAddress}\n        />\n    ) : (\n        <InstallXdcPay />\n    );\n\ninterface Gateway {\n    txId: string;\n    pay: (amount: string, rate: number, receiveAddress: string) => Promise<{ message: string; status: string }>;\n    addDcErc20Token: () => {};\n    cardTotal: string;\n    rate?: number;\n    getAmountWithoutDecimals: (amount: string, rate: number) => string;\n    receiveAddress?: string;\n}\n\nconst PaymentGateway = ({\n    txId,\n    pay,\n    addDcErc20Token,\n    cardTotal,\n    rate,\n    getAmountWithoutDecimals,\n    receiveAddress\n}: Gateway) => {\n    const [error, setError] = useState<string>();\n\n    const payXdc = async (amount: string, rate: number) => {\n        const { message, status } = await pay(cardTotal, rate, receiveAddress);\n        if (status === \"error\") {\n            setError(message);\n        }\n    };\n\n    return (\n        <>\n            <div className=\"font-mulish text-lg uppercase font-bold text-black py-3 \">\n                Pay with DC tokens on XDC network\n            </div>\n            {txId ? (\n                <div>\n                    <Checkmark />\n                    <input type=\"hidden\" value={txId} name=\"xdc-datachain-gateway-txId\" />\n                    <div className=\"flex flex-col font-mulish uppercase font-bold text-black\">\n                        <div className=\"text-center my-2\">Tx Hash</div>\n                        <a\n                            className=\"font-mulish text-sm text-center no-underline hover:underline my-2\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                            href={getExplorerUrl(\"XDC\", txId)}\n                        >\n                            {txId}\n                        </a>\n                    </div>\n                </div>\n            ) : (\n                <>\n                    <Button>\n                        <img className=\"my-4\" src={getImageUrl(\"xdc-dc.png\")} onClick={() => payXdc(cardTotal, rate)} />\n                    </Button>\n                    <div className=\"font-mulish text-lg uppercase font-bold text-black my-4\">\n                        Pay {getAmountWithoutDecimals(cardTotal, rate)} XDC\n                    </div>\n                    {error && (\n                        <div className=\"text-rose-600 w-1/2 font-mulish text-lg uppercase font-bold text-black my-4\">\n                            {error}\n                        </div>\n                    )}\n                </>\n            )}\n\n            <Button onClick={addDcErc20Token}>Add Datachain token to the XDC Pay</Button>\n        </>\n    );\n};\n\nconst InstallXdcPay = () => (\n    <div className=\"font-mulish\">\n        Please{\" \"}\n        <a\n            className=\"font-mulish\"\n            href=\"https://chrome.google.com/webstore/detail/xdcpay/bocpokimicclpaiekenaeelehdjllofo\"\n        >\n            install\n        </a>{\" \"}\n        and login to XDC Pay\n    </div>\n);\n\nconst Button = ({ children, onClick }: { children: React.ReactNode; onClick?: () => {} }) => {\n    return (\n        <div\n            onClick={onClick}\n            className=\"font-mulish w-1/2 text-center cursor-pointer m-3 p-4 text-base font-bold text-gray-900 bg-gray-50 rounded-lg hover:bg-gray-100 group hover:shadow dark:bg-gray-600 dark:hover:bg-gray-500 dark:text-white font-mulish text-sm uppercase font-bold text-black\"\n        >\n            {children}\n        </div>\n    );\n};\n","/* istanbul ignore file: we do not need to care about the entry point file as errors are detected through E2E */\n\n/**\n * The entrypoint for the WordPress frontend widget.\n */\n\nimport \"@tatum/utils\"; // Import once for startup polyfilling (e. g. setimmediate)\nimport { render } from \"react-dom\";\nimport { RootStore } from \"./store\";\nimport { Constants } from \"./constants\";\nimport React from \"react\";\nimport { XdcPaymentGateway } from \"./widget/xdcPaymentGateway\";\nimport \"./style/tailwind.css\";\n\nsetTimeout(() => {\n    const xdcPaymentGateways = document.querySelectorAll(`div.${Constants.slug}`);\n    xdcPaymentGateways.forEach((gateway) => {\n        render(\n            <RootStore.StoreProvider>\n                <XdcPaymentGateway cartTotal={(gateway as HTMLElement).dataset.cartTotal} />\n            </RootStore.StoreProvider>,\n            gateway\n        );\n    });\n}, 8000);\n","import { observable, runInAction } from \"mobx\";\nimport { BaseOptions } from \"@tatum/utils\";\nimport { RootStore } from \"./stores\";\n\nclass OptionStore extends BaseOptions {\n    // Implement \"others\" property in your Assets.php;\n    @observable\n    public others: {} = {};\n\n    public readonly pureSlug: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly pureSlugCamelCased: ReturnType<typeof BaseOptions.getPureSlug>;\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        super();\n        this.rootStore = rootStore;\n        this.pureSlug = BaseOptions.getPureSlug(process.env);\n        this.pureSlugCamelCased = BaseOptions.getPureSlug(process.env, true);\n\n        // Use the localized WP object to fill this object values.\n        runInAction(() => Object.assign(this, (window as any)[this.pureSlugCamelCased]));\n    }\n}\n\nexport { OptionStore };\n","import { observable, action } from \"mobx\";\nimport { TodoStore } from \"../store\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoModel {\n    @observable\n    public title: string;\n\n    @observable\n    public completed = false;\n\n    @observable\n    public id: number;\n\n    private store: TodoStore;\n\n    constructor(store: TodoModel[\"store\"], title: TodoModel[\"title\"]) {\n        this.id = store.todos.length + 1;\n        this.store = store;\n        this.title = title;\n    }\n\n    @action\n    public toggle() {\n        this.completed = !this.completed;\n    }\n\n    @action\n    public destroy() {\n        this.store.todos.splice(this.store.todos.indexOf(this), 1);\n    }\n\n    @action\n    public setTitle(title: TodoModel[\"title\"]) {\n        this.title = title;\n    }\n}\n\nexport { TodoModel };\n","import { observable, action } from \"mobx\";\nimport { TodoModel } from \"../models\";\nimport { RootStore } from \"./stores\";\n\n/* istanbul ignore next: Example implementations gets deleted the most time after plugin creation! */\nclass TodoStore {\n    @observable\n    public todos: TodoModel[] = [];\n\n    public readonly rootStore: RootStore;\n\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @action\n    public add(title: TodoModel[\"title\"]) {\n        this.todos.push(new TodoModel(this, title));\n    }\n}\n\nexport { TodoStore };\n"],"sourceRoot":""}